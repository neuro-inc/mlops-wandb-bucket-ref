[metadata]
name = wabucketref
version = attr: wabucketref.__version__
description = Run experiments, track artifacts via WandB, store artifacts in bucket and refer them in WandB
url = https://github.com/neuro-inc/mlops-wandb-bucket-ref
long_description = file: README.md
long_description_content_type = text/markdown
author = Apolo Team
author_email = dev@apolo.us
license = Apache 2
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Operating System :: OS Independent
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Information Technology
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development
    Topic :: Utilities
    License :: OSI Approved :: Apache Software License

[options]
package_dir=
    =.
packages=find:
zip_safe=False
python_requires = >=3.8.0
include_package_data = True
install_requires =
    apolo-cli>=24.8.1
    wandb[aws]>=0.10.33,<=0.17.8
    aiobotocore>=2.3.0,<=2.12.0 # 2.12.1 breaks apolo-sdk and not supported yet

[options.packages.find]
where=.

[options.entry_points]
console_scripts =
    wabucket=wabucketref.cli:main

[flake8]
max-line-length = 88
exclude =
    .git
    __pycache__
; see error codes: https://flake8.pycqa.org/en/latest/user/error-codes.html
ignore = F541,W503

[isort]
line_length = 88
include_trailing_comma = True
multi_line_output = 3
force_grid_wrap = 0
combine_as_imports = True
lines_after_imports = 2
known_third_party=cloudpathlib,wandb

[mypy]
check_untyped_defs = True
disallow_any_generics = True
disallow_untyped_defs = True
follow_imports = silent
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_unused_configs = True
incremental = False

[mypy-setuptools]
ignore_missing_imports = true

[tool:pytest]
testpaths = tests
asyncio_mode = auto
