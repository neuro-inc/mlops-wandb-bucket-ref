name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  pull_request_target:
    branches: [master]

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Cache Python and its deps
      uses: actions/cache@v2.1.5
      with:
        key: ${{ runner.os }}-python-3.7-${{ hashFiles('requirements/*.txt') }}
        path: ${{ env.pythonLocation }}

    - name: Cache pre-commit hooks
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-python-3.7-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        make setup

    - name: Run linters
      run: |
        echo Linting ${{ github.sha }}
        make lint

    - name: Save the package version
      id: version
      run: |
        echo "::set-output name=version::$(python setup.py --version)"

  deploy:
    name: Build and push Docker image
    needs: [lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1.9.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build
      run: |
        docker build -t neuromation/wabucketref:${{ needs.lint.outputs.version }} \
          --build-arg COMMIT_SHA=${{ github.sha }} \
          .
    - name: Push
      run: |
        docker push neuromation/wabucketref:${{ needs.lint.outputs.version }}
